apiVersion: v1
kind: Service
metadata:
  name: test-app-secrets-provider-p2f-injected
  labels:
    app: test-app-secrets-provider-p2f-injected
spec:
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  selector:
    app: test-app-secrets-provider-p2f-injected
  type: {{ .Values.global.appServiceType }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-app-secrets-provider-p2f-injected
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-app-secrets-provider-p2f-injected
  name: test-app-secrets-provider-p2f-injected
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-app-secrets-provider-p2f-injected
  template:
    metadata:
      labels:
        app: test-app-secrets-provider-p2f-injected
      annotations:
        conjur.org/inject: "true"
        conjur.org/inject-type: "secrets-provider"
        conjur.org/container-name: "cyberark-secrets-provider-for-k8s"
        conjur.org/container-image: "cyberark/secrets-provider-for-k8s:edge"
        conjur.org/conjur-inject-volumes: "test-app"
        conjur.org/container-mode: "init"
        conjur.org/debug-logging: "true"
        conjur.org/authn-identity: {{ quote .Values.conjur.authnLogin }}
        conjur.org/secrets-destination: "file"
        conjur.org/conjur-secrets.p2f-app: |
          - test-secrets-provider-p2f-injected-app-db/url
          - test-secrets-provider-p2f-injected-app-db/username
          - test-secrets-provider-p2f-injected-app-db/password
        conjur.org/secret-file-path.p2f-app: "./application.yaml"
        conjur.org/secret-file-format.p2f-app: template
        conjur.org/secret-file-template.p2f-app: |
          spring:
            datasource:
              platform: postgres
              url: jdbc:{{ printf `{{ secret "url" }}` }}
              username: {{ printf `{{ secret "username" }}` }}
              password: {{ printf `{{ secret "password" }}` }}
            jpa:
              generate-ddl: true
              hibernate:
                ddl-auto: update
    spec:
      serviceAccountName: test-app-secrets-provider-p2f-injected
      containers:
      - image: {{ printf "%s:%s" .Values.app.image.repository .Values.app.image.tag }}
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}
        name: test-app
        command: [ "java", "-jar", "/app.jar", {{ printf "--spring.config.location=file:%s/application.yaml" .Values.app.secretsMountPath }} ]
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /pets
            port: http
          initialDelaySeconds: 15
          timeoutSeconds: 5
      {{- if eq .Values.app.platform "kubernetes" }}
      imagePullSecrets:
        - name: dockerpullsecret
      {{- end }}
